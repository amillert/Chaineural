{"version":3,"file":"swimlane-ngx-graph.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@swimlane/ngx-graph/lib/utils/id.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/dagre.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/dagreCluster.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/dagreNodesOnly.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/d3ForceDirected.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/colaForceDirected.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/layout.service.ts","ng://@swimlane/ngx-graph/lib/enums/panning.enum.ts","ng://@swimlane/ngx-graph/lib/graph/graph.component.ts","ng://@swimlane/ngx-graph/lib/graph/mouse-wheel.directive.ts","ng://@swimlane/ngx-graph/lib/graph/graph.module.ts","ng://@swimlane/ngx-graph/lib/ngx-graph.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","const cache = {};\n\n/**\n * Generates a short id.\n *\n */\nexport function id(): string {\n  let newId = ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n\n  newId = `a${newId}`;\n\n  // ensure not already used\n  if (!cache[newId]) {\n    cache[newId] = true;\n    return newId;\n  }\n\n  return id();\n}\n","import { Layout } from '../../models/layout.model';\nimport { Graph } from '../../models/graph.model';\nimport { id } from '../../utils/id';\nimport * as dagre from 'dagre';\nimport { Edge } from '../../models/edge.model';\n\nexport enum Orientation {\n  LEFT_TO_RIGHT = 'LR',\n  RIGHT_TO_LEFT = 'RL',\n  TOP_TO_BOTTOM = 'TB',\n  BOTTOM_TO_TOM = 'BT'\n}\nexport enum Alignment {\n  CENTER = 'C',\n  UP_LEFT = 'UL',\n  UP_RIGHT = 'UR',\n  DOWN_LEFT = 'DL',\n  DOWN_RIGHT = 'DR'\n}\n\nexport interface DagreSettings {\n  orientation?: Orientation;\n  marginX?: number;\n  marginY?: number;\n  edgePadding?: number;\n  rankPadding?: number;\n  nodePadding?: number;\n  align?: Alignment;\n  acyclicer?: 'greedy' | undefined;\n  ranker?: 'network-simplex' | 'tight-tree' | 'longest-path';\n  multigraph?: boolean;\n  compound?: boolean;\n}\n\nexport class DagreLayout implements Layout {\n  defaultSettings: DagreSettings = {\n    orientation: Orientation.LEFT_TO_RIGHT,\n    marginX: 20,\n    marginY: 20,\n    edgePadding: 100,\n    rankPadding: 100,\n    nodePadding: 50,\n    multigraph: true,\n    compound: true\n  };\n  settings: DagreSettings = {};\n\n  dagreGraph: any;\n  dagreNodes: any;\n  dagreEdges: any;\n\n  run(graph: Graph): Graph {\n    this.createDagreGraph(graph);\n    dagre.layout(this.dagreGraph);\n\n    graph.edgeLabels = this.dagreGraph._edgeLabels;\n\n    for (const dagreNodeId in this.dagreGraph._nodes) {\n      const dagreNode = this.dagreGraph._nodes[dagreNodeId];\n      const node = graph.nodes.find(n => n.id === dagreNode.id);\n      node.position = {\n        x: dagreNode.x,\n        y: dagreNode.y\n      };\n      node.dimension = {\n        width: dagreNode.width,\n        height: dagreNode.height\n      };\n    }\n\n    return graph;\n  }\n\n  updateEdge(graph: Graph, edge: Edge): Graph {\n    const sourceNode = graph.nodes.find(n => n.id === edge.source);\n    const targetNode = graph.nodes.find(n => n.id === edge.target);\n\n    // determine new arrow position\n    const dir = sourceNode.position.y <= targetNode.position.y ? -1 : 1;\n    const startingPoint = {\n      x: sourceNode.position.x,\n      y: sourceNode.position.y - dir * (sourceNode.dimension.height / 2)\n    };\n    const endingPoint = {\n      x: targetNode.position.x,\n      y: targetNode.position.y + dir * (targetNode.dimension.height / 2)\n    };\n\n    // generate new points\n    edge.points = [startingPoint, endingPoint];\n    return graph;\n  }\n\n  createDagreGraph(graph: Graph): any {\n    const settings = Object.assign({}, this.defaultSettings, this.settings);\n    this.dagreGraph = new dagre.graphlib.Graph({compound: settings.compound, multigraph: settings.multigraph});\n    \n    this.dagreGraph.setGraph({\n      rankdir: settings.orientation,\n      marginx: settings.marginX,\n      marginy: settings.marginY,\n      edgesep: settings.edgePadding,\n      ranksep: settings.rankPadding,\n      nodesep: settings.nodePadding,\n      align: settings.align,\n      acyclicer: settings.acyclicer,\n      ranker: settings.ranker,\n      multigraph: settings.multigraph,\n      compound: settings.compound\n    });\n\n    // Default to assigning a new object as a label for each new edge.\n    this.dagreGraph.setDefaultEdgeLabel(() => {\n      return {\n        /* empty */\n      };\n    });\n\n    this.dagreNodes = graph.nodes.map(n => {\n      const node: any = Object.assign({}, n);\n      node.width = n.dimension.width;\n      node.height = n.dimension.height;\n      node.x = n.position.x;\n      node.y = n.position.y;\n      return node;\n    });\n\n    this.dagreEdges = graph.edges.map(l => {\n      const newLink: any = Object.assign({}, l);\n      if (!newLink.id) {\n        newLink.id = id();\n      }\n      return newLink;\n    });\n\n    for (const node of this.dagreNodes) {\n      if (!node.width) {\n        node.width = 20;\n      }\n      if (!node.height) {\n        node.height = 30;\n      }\n\n      // update dagre\n      this.dagreGraph.setNode(node.id, node);\n    }\n\n    // update dagre\n    for (const edge of this.dagreEdges) {\n      if (settings.multigraph) {\n        this.dagreGraph.setEdge(edge.source, edge.target, edge, edge.id);\n      } else {\n        this.dagreGraph.setEdge(edge.source, edge.target);\n      }\n    }\n\n    return this.dagreGraph;\n  }\n}\n","import { Layout } from '../../models/layout.model';\nimport { Graph } from '../../models/graph.model';\nimport { id } from '../../utils/id';\nimport * as dagre from 'dagre';\nimport { Edge } from '../../models/edge.model';\nimport { Node, ClusterNode } from '../../models/node.model';\nimport { DagreSettings, Orientation } from './dagre';\n\nexport class DagreClusterLayout implements Layout {\n  defaultSettings: DagreSettings = {\n    orientation: Orientation.LEFT_TO_RIGHT,\n    marginX: 20,\n    marginY: 20,\n    edgePadding: 100,\n    rankPadding: 100,\n    nodePadding: 50,\n    multigraph: true,\n    compound: true\n  };\n  settings: DagreSettings = {};\n\n  dagreGraph: any;\n  dagreNodes: Node[];\n  dagreClusters: ClusterNode[];\n  dagreEdges: any;\n\n  run(graph: Graph): Graph {\n    this.createDagreGraph(graph);\n    dagre.layout(this.dagreGraph);\n\n    graph.edgeLabels = this.dagreGraph._edgeLabels;\n\n    const dagreToOutput = node => {\n      const dagreNode = this.dagreGraph._nodes[node.id];\n      return {\n        ...node,\n        position: {\n          x: dagreNode.x,\n          y: dagreNode.y\n        },\n        dimension: {\n          width: dagreNode.width,\n          height: dagreNode.height\n        }\n      };\n    };\n    graph.clusters = (graph.clusters || []).map(dagreToOutput);\n    graph.nodes = graph.nodes.map(dagreToOutput);\n\n    return graph;\n  }\n\n  updateEdge(graph: Graph, edge: Edge): Graph {\n    const sourceNode = graph.nodes.find(n => n.id === edge.source);\n    const targetNode = graph.nodes.find(n => n.id === edge.target);\n\n    // determine new arrow position\n    const dir = sourceNode.position.y <= targetNode.position.y ? -1 : 1;\n    const startingPoint = {\n      x: sourceNode.position.x,\n      y: sourceNode.position.y - dir * (sourceNode.dimension.height / 2)\n    };\n    const endingPoint = {\n      x: targetNode.position.x,\n      y: targetNode.position.y + dir * (targetNode.dimension.height / 2)\n    };\n\n    // generate new points\n    edge.points = [startingPoint, endingPoint];\n    return graph;\n  }\n\n  createDagreGraph(graph: Graph): any {\n    const settings = Object.assign({}, this.defaultSettings, this.settings);\n    this.dagreGraph = new dagre.graphlib.Graph({ compound: settings.compound, multigraph: settings.multigraph });\n    this.dagreGraph.setGraph({\n      rankdir: settings.orientation,\n      marginx: settings.marginX,\n      marginy: settings.marginY,\n      edgesep: settings.edgePadding,\n      ranksep: settings.rankPadding,\n      nodesep: settings.nodePadding,\n      align: settings.align,\n      acyclicer: settings.acyclicer,\n      ranker: settings.ranker,\n      multigraph: settings.multigraph,\n      compound: settings.compound\n    });\n\n    // Default to assigning a new object as a label for each new edge.\n    this.dagreGraph.setDefaultEdgeLabel(() => {\n      return {\n        /* empty */\n      };\n    });\n\n    this.dagreNodes = graph.nodes.map((n: Node) => {\n      const node: any = Object.assign({}, n);\n      node.width = n.dimension.width;\n      node.height = n.dimension.height;\n      node.x = n.position.x;\n      node.y = n.position.y;\n      return node;\n    });\n\n    this.dagreClusters = graph.clusters || [];\n\n    this.dagreEdges = graph.edges.map(l => {\n      const newLink: any = Object.assign({}, l);\n      if (!newLink.id) {\n        newLink.id = id();\n      }\n      return newLink;\n    });\n\n    for (const node of this.dagreNodes) {\n      this.dagreGraph.setNode(node.id, node);\n    }\n\n    for (const cluster of this.dagreClusters) {\n      this.dagreGraph.setNode(cluster.id, cluster);\n      cluster.childNodeIds.forEach(childNodeId => {\n        this.dagreGraph.setParent(childNodeId, cluster.id);\n      });\n    }\n\n    // update dagre\n    for (const edge of this.dagreEdges) {\n      if (settings.multigraph) {\n        this.dagreGraph.setEdge(edge.source, edge.target, edge, edge.id);\n      } else {\n        this.dagreGraph.setEdge(edge.source, edge.target);\n      }\n    }\n\n    return this.dagreGraph;\n  }\n}\n","import { Layout } from '../../models/layout.model';\nimport { Graph } from '../../models/graph.model';\nimport { id } from '../../utils/id';\nimport * as dagre from 'dagre';\nimport { Edge } from '../../models/edge.model';\n\nexport enum Orientation {\n  LEFT_TO_RIGHT = 'LR',\n  RIGHT_TO_LEFT = 'RL',\n  TOP_TO_BOTTOM = 'TB',\n  BOTTOM_TO_TOM = 'BT'\n}\nexport enum Alignment {\n  CENTER = 'C',\n  UP_LEFT = 'UL',\n  UP_RIGHT = 'UR',\n  DOWN_LEFT = 'DL',\n  DOWN_RIGHT = 'DR'\n}\n\nexport interface DagreSettings {\n  orientation?: Orientation;\n  marginX?: number;\n  marginY?: number;\n  edgePadding?: number;\n  rankPadding?: number;\n  nodePadding?: number;\n  align?: Alignment;\n  acyclicer?: 'greedy' | undefined;\n  ranker?: 'network-simplex' | 'tight-tree' | 'longest-path';\n  multigraph?: boolean;\n  compound?: boolean;\n}\n\nexport interface DagreNodesOnlySettings extends DagreSettings {\n  curveDistance?: number;\n}\n\nconst DEFAULT_EDGE_NAME = '\\x00';\nconst GRAPH_NODE = '\\x00';\nconst EDGE_KEY_DELIM = '\\x01';\n\nexport class DagreNodesOnlyLayout implements Layout {\n  defaultSettings: DagreNodesOnlySettings = {\n    orientation: Orientation.LEFT_TO_RIGHT,\n    marginX: 20,\n    marginY: 20,\n    edgePadding: 100,\n    rankPadding: 100,\n    nodePadding: 50,\n    curveDistance: 20,\n    multigraph: true,\n    compound: true\n  };\n  settings: DagreNodesOnlySettings = {};\n\n  dagreGraph: any;\n  dagreNodes: any;\n  dagreEdges: any;\n\n  run(graph: Graph): Graph {\n    this.createDagreGraph(graph);\n    dagre.layout(this.dagreGraph);\n\n    graph.edgeLabels = this.dagreGraph._edgeLabels;\n\n    for (const dagreNodeId in this.dagreGraph._nodes) {\n      const dagreNode = this.dagreGraph._nodes[dagreNodeId];\n      const node = graph.nodes.find(n => n.id === dagreNode.id);\n      node.position = {\n        x: dagreNode.x,\n        y: dagreNode.y\n      };\n      node.dimension = {\n        width: dagreNode.width,\n        height: dagreNode.height\n      };\n    }\n    for (const edge of graph.edges) {\n      this.updateEdge(graph, edge);\n    }\n\n    return graph;\n  }\n\n  updateEdge(graph: Graph, edge: Edge): Graph {\n    const sourceNode = graph.nodes.find(n => n.id === edge.source);\n    const targetNode = graph.nodes.find(n => n.id === edge.target);\n    const rankAxis: 'x' | 'y' = this.settings.orientation === 'BT' || this.settings.orientation === 'TB' ? 'y' : 'x';\n    const orderAxis: 'x' | 'y' = rankAxis === 'y' ? 'x' : 'y';\n    const rankDimension = rankAxis === 'y' ? 'height' : 'width';\n    // determine new arrow position\n    const dir = sourceNode.position[rankAxis] <= targetNode.position[rankAxis] ? -1 : 1;\n    const startingPoint = {\n      [orderAxis]: sourceNode.position[orderAxis],\n      [rankAxis]: sourceNode.position[rankAxis] - dir * (sourceNode.dimension[rankDimension] / 2)\n    };\n    const endingPoint = {\n      [orderAxis]: targetNode.position[orderAxis],\n      [rankAxis]: targetNode.position[rankAxis] + dir * (targetNode.dimension[rankDimension] / 2)\n    };\n\n    const curveDistance = this.settings.curveDistance || this.defaultSettings.curveDistance;\n    // generate new points\n    edge.points = [\n      startingPoint,\n      {\n        [orderAxis]: startingPoint[orderAxis],\n        [rankAxis]: startingPoint[rankAxis] - dir * curveDistance\n      },\n      {\n        [orderAxis]: endingPoint[orderAxis],\n        [rankAxis]: endingPoint[rankAxis] + dir * curveDistance\n      },\n      endingPoint\n    ];\n    const edgeLabelId = `${edge.source}${EDGE_KEY_DELIM}${edge.target}${EDGE_KEY_DELIM}${DEFAULT_EDGE_NAME}`;\n    const matchingEdgeLabel = graph.edgeLabels[edgeLabelId];\n    if (matchingEdgeLabel) {\n      matchingEdgeLabel.points = edge.points;\n    }\n    return graph;\n  }\n\n  createDagreGraph(graph: Graph): any {\n    const settings = Object.assign({}, this.defaultSettings, this.settings);\n    this.dagreGraph = new dagre.graphlib.Graph({ compound: settings.compound, multigraph: settings.multigraph });\n    this.dagreGraph.setGraph({\n      rankdir: settings.orientation,\n      marginx: settings.marginX,\n      marginy: settings.marginY,\n      edgesep: settings.edgePadding,\n      ranksep: settings.rankPadding,\n      nodesep: settings.nodePadding,\n      align: settings.align,\n      acyclicer: settings.acyclicer,\n      ranker: settings.ranker,\n      multigraph: settings.multigraph,\n      compound: settings.compound\n    });\n\n    // Default to assigning a new object as a label for each new edge.\n    this.dagreGraph.setDefaultEdgeLabel(() => {\n      return {\n        /* empty */\n      };\n    });\n\n    this.dagreNodes = graph.nodes.map(n => {\n      const node: any = Object.assign({}, n);\n      node.width = n.dimension.width;\n      node.height = n.dimension.height;\n      node.x = n.position.x;\n      node.y = n.position.y;\n      return node;\n    });\n\n    this.dagreEdges = graph.edges.map(l => {\n      const newLink: any = Object.assign({}, l);\n      if (!newLink.id) {\n        newLink.id = id();\n      }\n      return newLink;\n    });\n\n    for (const node of this.dagreNodes) {\n      if (!node.width) {\n        node.width = 20;\n      }\n      if (!node.height) {\n        node.height = 30;\n      }\n\n      // update dagre\n      this.dagreGraph.setNode(node.id, node);\n    }\n\n    // update dagre\n    for (const edge of this.dagreEdges) {\n      if (settings.multigraph) {\n        this.dagreGraph.setEdge(edge.source, edge.target, edge, edge.id);\n      } else {\n        this.dagreGraph.setEdge(edge.source, edge.target);\n      }\n    }\n\n    return this.dagreGraph;\n  }\n}\n","import { Layout } from '../../models/layout.model';\nimport { Graph } from '../../models/graph.model';\nimport { Node } from '../../models/node.model';\nimport { id } from '../../utils/id';\nimport { forceCollide, forceLink, forceManyBody, forceSimulation } from 'd3-force';\nimport { Edge } from '../../models/edge.model';\nimport { Observable, Subject } from 'rxjs';\nimport { NodePosition } from '../../models';\n\nexport interface D3ForceDirectedSettings {\n  force?: any;\n  forceLink?: any;\n}\nexport interface D3Node {\n  id?: string;\n  x: number;\n  y: number;\n  width?: number;\n  height?: number;\n  fx?: number;\n  fy?: number;\n}\nexport interface D3Edge {\n  source: string | D3Node;\n  target: string | D3Node;\n  midPoint: NodePosition;\n}\nexport interface D3Graph {\n  nodes: D3Node[];\n  edges: D3Edge[];\n}\nexport interface MergedNode extends D3Node, Node {\n  id: string;\n}\n\nexport function toD3Node(maybeNode: string | D3Node): D3Node {\n  if (typeof maybeNode === 'string') {\n    return {\n      id: maybeNode,\n      x: 0,\n      y: 0\n    };\n  }\n  return maybeNode;\n}\n\nexport class D3ForceDirectedLayout implements Layout {\n  defaultSettings: D3ForceDirectedSettings = {\n    force: forceSimulation<any>()\n      .force('charge', forceManyBody().strength(-150))\n      .force('collide', forceCollide(5)),\n    forceLink: forceLink<any, any>()\n      .id(node => node.id)\n      .distance(() => 100)\n  };\n  settings: D3ForceDirectedSettings = {};\n\n  inputGraph: Graph;\n  outputGraph: Graph;\n  d3Graph: D3Graph;\n  outputGraph$: Subject<Graph> = new Subject();\n\n  draggingStart: { x: number; y: number };\n\n  run(graph: Graph): Observable<Graph> {\n    this.inputGraph = graph;\n    this.d3Graph = {\n      nodes: [...this.inputGraph.nodes.map(n => ({ ...n }))] as any,\n      edges: [...this.inputGraph.edges.map(e => ({ ...e }))] as any\n    };\n    this.outputGraph = {\n      nodes: [],\n      edges: [],\n      edgeLabels: []\n    };\n    this.outputGraph$.next(this.outputGraph);\n    this.settings = Object.assign({}, this.defaultSettings, this.settings);\n    if (this.settings.force) {\n      this.settings.force\n        .nodes(this.d3Graph.nodes)\n        .force('link', this.settings.forceLink.links(this.d3Graph.edges))\n        .alpha(0.5)\n        .restart()\n        .on('tick', () => {\n          this.outputGraph$.next(this.d3GraphToOutputGraph(this.d3Graph));\n        });\n    }\n\n    return this.outputGraph$.asObservable();\n  }\n\n  updateEdge(graph: Graph, edge: Edge): Observable<Graph> {\n    const settings = Object.assign({}, this.defaultSettings, this.settings);\n    if (settings.force) {\n      settings.force\n        .nodes(this.d3Graph.nodes)\n        .force('link', settings.forceLink.links(this.d3Graph.edges))\n        .alpha(0.5)\n        .restart()\n        .on('tick', () => {\n          this.outputGraph$.next(this.d3GraphToOutputGraph(this.d3Graph));\n        });\n    }\n\n    return this.outputGraph$.asObservable();\n  }\n\n  d3GraphToOutputGraph(d3Graph: D3Graph): Graph {\n    this.outputGraph.nodes = this.d3Graph.nodes.map((node: MergedNode) => ({\n      ...node,\n      id: node.id || id(),\n      position: {\n        x: node.x,\n        y: node.y\n      },\n      dimension: {\n        width: (node.dimension && node.dimension.width) || 20,\n        height: (node.dimension && node.dimension.height) || 20\n      },\n      transform: `translate(${node.x - ((node.dimension && node.dimension.width) || 20) / 2 || 0}, ${node.y -\n        ((node.dimension && node.dimension.height) || 20) / 2 || 0})`\n    }));\n\n    this.outputGraph.edges = this.d3Graph.edges.map(edge => ({\n      ...edge,\n      source: toD3Node(edge.source).id,\n      target: toD3Node(edge.target).id,\n      points: [\n        {\n          x: toD3Node(edge.source).x,\n          y: toD3Node(edge.source).y\n        },\n        {\n          x: toD3Node(edge.target).x,\n          y: toD3Node(edge.target).y\n        }\n      ]\n    }));\n\n    this.outputGraph.edgeLabels = this.outputGraph.edges;\n    return this.outputGraph;\n  }\n\n  onDragStart(draggingNode: Node, $event: MouseEvent): void {\n    this.settings.force.alphaTarget(0.3).restart();\n    const node = this.d3Graph.nodes.find(d3Node => d3Node.id === draggingNode.id);\n    if (!node) {\n      return;\n    }\n    this.draggingStart = { x: $event.x - node.x, y: $event.y - node.y };\n    node.fx = $event.x - this.draggingStart.x;\n    node.fy = $event.y - this.draggingStart.y;\n  }\n\n  onDrag(draggingNode: Node, $event: MouseEvent): void {\n    if (!draggingNode) {\n      return;\n    }\n    const node = this.d3Graph.nodes.find(d3Node => d3Node.id === draggingNode.id);\n    if (!node) {\n      return;\n    }\n    node.fx = $event.x - this.draggingStart.x;\n    node.fy = $event.y - this.draggingStart.y;\n  }\n\n  onDragEnd(draggingNode: Node, $event: MouseEvent): void {\n    if (!draggingNode) {\n      return;\n    }\n    const node = this.d3Graph.nodes.find(d3Node => d3Node.id === draggingNode.id);\n    if (!node) {\n      return;\n    }\n\n    this.settings.force.alphaTarget(0);\n    node.fx = undefined;\n    node.fy = undefined;\n  }\n}\n","import { Layout } from '../../models/layout.model';\nimport { Graph } from '../../models/graph.model';\nimport { Node, ClusterNode } from '../../models/node.model';\nimport { id } from '../../utils/id';\nimport { d3adaptor, ID3StyleLayoutAdaptor, Layout as ColaLayout, Group, InputNode, Link, Rectangle } from 'webcola';\nimport * as d3Dispatch from 'd3-dispatch';\nimport * as d3Force from 'd3-force';\nimport * as d3Timer from 'd3-timer';\nimport { Edge } from '../../models/edge.model';\nimport { Observable, Subject } from 'rxjs';\nimport { ViewDimensions } from '@swimlane/ngx-charts';\n\nexport interface ColaForceDirectedSettings {\n  force?: ColaLayout & ID3StyleLayoutAdaptor;\n  forceModifierFn?: (force: ColaLayout & ID3StyleLayoutAdaptor) => ColaLayout & ID3StyleLayoutAdaptor;\n  onTickListener?: (internalGraph: ColaGraph) => void;\n  viewDimensions?: ViewDimensions;\n}\nexport interface ColaGraph {\n  groups: Group[];\n  nodes: InputNode[];\n  links: Array<Link<number>>;\n}\nexport function toNode(nodes: InputNode[], nodeRef: InputNode | number): InputNode {\n  if (typeof nodeRef === 'number') {\n    return nodes[nodeRef];\n  }\n  return nodeRef;\n}\n\nexport class ColaForceDirectedLayout implements Layout {\n  defaultSettings: ColaForceDirectedSettings = {\n    force: d3adaptor({\n      ...d3Dispatch,\n      ...d3Force,\n      ...d3Timer\n    })\n      .linkDistance(150)\n      .avoidOverlaps(true),\n    viewDimensions: {\n      width: 600,\n      height: 600,\n      xOffset: 0\n    }\n  };\n  settings: ColaForceDirectedSettings = {};\n\n  inputGraph: Graph;\n  outputGraph: Graph;\n  internalGraph: ColaGraph & { groupLinks?: Edge[] };\n  outputGraph$: Subject<Graph> = new Subject();\n\n  draggingStart: { x: number; y: number };\n\n  run(graph: Graph): Observable<Graph> {\n    this.inputGraph = graph;\n    if (!this.inputGraph.clusters) {\n      this.inputGraph.clusters = [];\n    }\n    this.internalGraph = {\n      nodes: [\n        ...this.inputGraph.nodes.map(n => ({\n          ...n,\n          width: n.dimension ? n.dimension.width : 20,\n          height: n.dimension ? n.dimension.height : 20\n        }))\n      ] as any,\n      groups: [\n        ...this.inputGraph.clusters.map(\n          (cluster): Group => ({\n            padding: 5,\n            groups: cluster.childNodeIds\n              .map(nodeId => <any>this.inputGraph.clusters.findIndex(node => node.id === nodeId))\n              .filter(x => x >= 0),\n            leaves: cluster.childNodeIds\n              .map(nodeId => <any>this.inputGraph.nodes.findIndex(node => node.id === nodeId))\n              .filter(x => x >= 0)\n          })\n        )\n      ],\n      links: [\n        ...this.inputGraph.edges\n          .map(e => {\n            const sourceNodeIndex = this.inputGraph.nodes.findIndex(node => e.source === node.id);\n            const targetNodeIndex = this.inputGraph.nodes.findIndex(node => e.target === node.id);\n            if (sourceNodeIndex === -1 || targetNodeIndex === -1) {\n              return undefined;\n            }\n            return {\n              ...e,\n              source: sourceNodeIndex,\n              target: targetNodeIndex\n            };\n          })\n          .filter(x => !!x)\n      ] as any,\n      groupLinks: [\n        ...this.inputGraph.edges\n          .map(e => {\n            const sourceNodeIndex = this.inputGraph.nodes.findIndex(node => e.source === node.id);\n            const targetNodeIndex = this.inputGraph.nodes.findIndex(node => e.target === node.id);\n            if (sourceNodeIndex >= 0 && targetNodeIndex >= 0) {\n              return undefined;\n            }\n            return e;\n          })\n          .filter(x => !!x)\n      ]\n    };\n    this.outputGraph = {\n      nodes: [],\n      clusters: [],\n      edges: [],\n      edgeLabels: []\n    };\n    this.outputGraph$.next(this.outputGraph);\n    this.settings = Object.assign({}, this.defaultSettings, this.settings);\n    if (this.settings.force) {\n      this.settings.force = this.settings.force\n        .nodes(this.internalGraph.nodes)\n        .groups(this.internalGraph.groups)\n        .links(this.internalGraph.links)\n        .alpha(0.5)\n        .on('tick', () => {\n          if (this.settings.onTickListener) {\n            this.settings.onTickListener(this.internalGraph);\n          }\n          this.outputGraph$.next(this.internalGraphToOutputGraph(this.internalGraph));\n        });\n      if (this.settings.viewDimensions) {\n        this.settings.force = this.settings.force.size([\n          this.settings.viewDimensions.width,\n          this.settings.viewDimensions.height\n        ]);\n      }\n      if (this.settings.forceModifierFn) {\n        this.settings.force = this.settings.forceModifierFn(this.settings.force);\n      }\n      this.settings.force.start();\n    }\n\n    return this.outputGraph$.asObservable();\n  }\n\n  updateEdge(graph: Graph, edge: Edge): Observable<Graph> {\n    const settings = Object.assign({}, this.defaultSettings, this.settings);\n    if (settings.force) {\n      settings.force.start();\n    }\n\n    return this.outputGraph$.asObservable();\n  }\n\n  internalGraphToOutputGraph(internalGraph: any): Graph {\n    this.outputGraph.nodes = internalGraph.nodes.map(node => ({\n      ...node,\n      id: node.id || id(),\n      position: {\n        x: node.x,\n        y: node.y\n      },\n      dimension: {\n        width: (node.dimension && node.dimension.width) || 20,\n        height: (node.dimension && node.dimension.height) || 20\n      },\n      transform: `translate(${node.x - ((node.dimension && node.dimension.width) || 20) / 2 || 0}, ${node.y -\n        ((node.dimension && node.dimension.height) || 20) / 2 || 0})`\n    }));\n\n    this.outputGraph.edges = internalGraph.links\n      .map(edge => {\n        const source: any = toNode(internalGraph.nodes, edge.source);\n        const target: any = toNode(internalGraph.nodes, edge.target);\n        return {\n          ...edge,\n          source: source.id,\n          target: target.id,\n          points: [\n            (source.bounds as Rectangle).rayIntersection(target.bounds.cx(), target.bounds.cy()),\n            (target.bounds as Rectangle).rayIntersection(source.bounds.cx(), source.bounds.cy())\n          ]\n        };\n      })\n      .concat(\n        internalGraph.groupLinks.map(groupLink => {\n          const sourceNode = internalGraph.nodes.find(foundNode => (foundNode as any).id === groupLink.source);\n          const targetNode = internalGraph.nodes.find(foundNode => (foundNode as any).id === groupLink.target);\n          const source =\n            sourceNode || internalGraph.groups.find(foundGroup => (foundGroup as any).id === groupLink.source);\n          const target =\n            targetNode || internalGraph.groups.find(foundGroup => (foundGroup as any).id === groupLink.target);\n          return {\n            ...groupLink,\n            source: source.id,\n            target: target.id,\n            points: [\n              (source.bounds as Rectangle).rayIntersection(target.bounds.cx(), target.bounds.cy()),\n              (target.bounds as Rectangle).rayIntersection(source.bounds.cx(), source.bounds.cy())\n            ]\n          };\n        })\n      );\n\n    this.outputGraph.clusters = internalGraph.groups.map(\n      (group, index): ClusterNode => {\n        const inputGroup = this.inputGraph.clusters[index];\n        return {\n          ...inputGroup,\n          dimension: {\n            width: group.bounds ? group.bounds.width() : 20,\n            height: group.bounds ? group.bounds.height() : 20\n          },\n          position: {\n            x: group.bounds ? group.bounds.x + group.bounds.width() / 2 : 0,\n            y: group.bounds ? group.bounds.y + group.bounds.height() / 2 : 0\n          }\n        };\n      }\n    );\n    this.outputGraph.edgeLabels = this.outputGraph.edges;\n    return this.outputGraph;\n  }\n\n  onDragStart(draggingNode: Node, $event: MouseEvent): void {\n    const nodeIndex = this.outputGraph.nodes.findIndex(foundNode => foundNode.id === draggingNode.id);\n    const node = this.internalGraph.nodes[nodeIndex];\n    if (!node) {\n      return;\n    }\n    this.draggingStart = { x: node.x - $event.x, y: node.y - $event.y };\n    node.fixed = 1;\n    this.settings.force.start();\n  }\n\n  onDrag(draggingNode: Node, $event: MouseEvent): void {\n    if (!draggingNode) {\n      return;\n    }\n    const nodeIndex = this.outputGraph.nodes.findIndex(foundNode => foundNode.id === draggingNode.id);\n    const node = this.internalGraph.nodes[nodeIndex];\n    if (!node) {\n      return;\n    }\n    node.x = this.draggingStart.x + $event.x;\n    node.y = this.draggingStart.y + $event.y;\n  }\n\n  onDragEnd(draggingNode: Node, $event: MouseEvent): void {\n    if (!draggingNode) {\n      return;\n    }\n    const nodeIndex = this.outputGraph.nodes.findIndex(foundNode => foundNode.id === draggingNode.id);\n    const node = this.internalGraph.nodes[nodeIndex];\n    if (!node) {\n      return;\n    }\n\n    node.fixed = 0;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Layout } from '../../models/layout.model';\nimport { DagreLayout } from './dagre';\nimport { DagreClusterLayout } from './dagreCluster';\nimport { DagreNodesOnlyLayout } from './dagreNodesOnly';\nimport { D3ForceDirectedLayout } from './d3ForceDirected';\nimport { ColaForceDirectedLayout } from './colaForceDirected';\n\nconst layouts = {\n  dagre: DagreLayout,\n  dagreCluster: DagreClusterLayout,\n  dagreNodesOnly: DagreNodesOnlyLayout,\n  d3ForceDirected: D3ForceDirectedLayout,\n  colaForceDirected: ColaForceDirectedLayout\n};\n\n@Injectable()\nexport class LayoutService {\n  getLayout(name: string): Layout {\n    if (layouts[name]) {\n      return new layouts[name]();\n    } else {\n      throw new Error(`Unknown layout type '${name}'`);\n    }\n  }\n}\n","export enum PanningAxis {\n  Both = 'both',\n  Horizontal = 'horizontal',\n  Vertical = 'vertical',\n}","// rename transition due to conflict with d3 transition\nimport { animate, style, transition as ngTransition, trigger } from '@angular/animations';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n  NgZone,\n  ChangeDetectorRef,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  BaseChartComponent,\n  ChartComponent,\n  ColorHelper,\n  ViewDimensions,\n  calculateViewDimensions\n} from '@swimlane/ngx-charts';\nimport { select } from 'd3-selection';\nimport * as shape from 'd3-shape';\nimport * as ease from 'd3-ease';\nimport 'd3-transition';\nimport { Observable, Subscription, of } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { identity, scale, smoothMatrix, toSVG, transform, translate } from 'transformation-matrix';\nimport { Layout } from '../models/layout.model';\nimport { LayoutService } from './layouts/layout.service';\nimport { Edge } from '../models/edge.model';\nimport { Node, ClusterNode } from '../models/node.model';\nimport { Graph } from '../models/graph.model';\nimport { id } from '../utils/id';\nimport { PanningAxis } from '../enums/panning.enum';\n\n/**\n * Matrix\n */\nexport interface Matrix {\n  a: number;\n  b: number;\n  c: number;\n  d: number;\n  e: number;\n  f: number;\n}\n\n@Component({\n  selector: 'ngx-graph',\n  styleUrls: ['./graph.component.scss'],\n  templateUrl: 'graph.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GraphComponent extends BaseChartComponent implements OnInit, OnChanges, OnDestroy, AfterViewInit {\n  @Input() legend: boolean = false;\n  @Input() nodes: Node[] = [];\n  @Input() clusters: ClusterNode[] = [];\n  @Input() links: Edge[] = [];\n  @Input() activeEntries: any[] = [];\n  @Input() curve: any;\n  @Input() draggingEnabled = true;\n  @Input() nodeHeight: number;\n  @Input() nodeMaxHeight: number;\n  @Input() nodeMinHeight: number;\n  @Input() nodeWidth: number;\n  @Input() nodeMinWidth: number;\n  @Input() nodeMaxWidth: number;\n  @Input() panningEnabled: boolean = true;\n  @Input() panningAxis: PanningAxis = PanningAxis.Both;\n  @Input() enableZoom = true;\n  @Input() zoomSpeed = 0.1;\n  @Input() minZoomLevel = 0.1;\n  @Input() maxZoomLevel = 4.0;\n  @Input() autoZoom = false;\n  @Input() panOnZoom = true;\n  @Input() animate? = false;\n  @Input() autoCenter = false;\n  @Input() update$: Observable<any>;\n  @Input() center$: Observable<any>;\n  @Input() zoomToFit$: Observable<any>;\n  @Input() panToNode$: Observable<any>;\n  @Input() layout: string | Layout;\n  @Input() layoutSettings: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n  @Output() zoomChange: EventEmitter<number> = new EventEmitter();\n  @Output() clickHandler: EventEmitter<MouseEvent> = new EventEmitter();\n\n  @ContentChild('linkTemplate', {static: false}) linkTemplate: TemplateRef<any>;\n  @ContentChild('nodeTemplate', {static: false}) nodeTemplate: TemplateRef<any>;\n  @ContentChild('clusterTemplate', {static: false}) clusterTemplate: TemplateRef<any>;\n  @ContentChild('defsTemplate', {static: false}) defsTemplate: TemplateRef<any>;\n\n  @ViewChild(ChartComponent, { read: ElementRef, static: true }) chart: ElementRef;\n  @ViewChildren('nodeElement') nodeElements: QueryList<ElementRef>;\n  @ViewChildren('linkElement') linkElements: QueryList<ElementRef>;\n\n  private isMouseMoveCalled:boolean = false;\n\n  graphSubscription: Subscription = new Subscription();\n  subscriptions: Subscription[] = [];\n  colors: ColorHelper;\n  dims: ViewDimensions;\n  margin = [0, 0, 0, 0];\n  results = [];\n  seriesDomain: any;\n  transform: string;\n  legendOptions: any;\n  isPanning = false;\n  isDragging = false;\n  draggingNode: Node;\n  initialized = false;\n  graph: Graph;\n  graphDims: any = { width: 0, height: 0 };\n  _oldLinks: Edge[] = [];\n  oldNodes: Set<string> = new Set();\n  transformationMatrix: Matrix = identity();\n  _touchLastX = null;\n  _touchLastY = null;\n\n  constructor(\n    private el: ElementRef,\n    public zone: NgZone,\n    public cd: ChangeDetectorRef,\n    private layoutService: LayoutService\n  ) {\n    super(el, zone, cd);\n  }\n\n  @Input()\n  groupResultsBy: (node: any) => string = node => node.label;\n\n  /**\n   * Get the current zoom level\n   */\n  get zoomLevel() {\n    return this.transformationMatrix.a;\n  }\n\n  /**\n   * Set the current zoom level\n   */\n  @Input('zoomLevel')\n  set zoomLevel(level) {\n    this.zoomTo(Number(level));\n  }\n\n  /**\n   * Get the current `x` position of the graph\n   */\n  get panOffsetX() {\n    return this.transformationMatrix.e;\n  }\n\n  /**\n   * Set the current `x` position of the graph\n   */\n  @Input('panOffsetX')\n  set panOffsetX(x) {\n    this.panTo(Number(x), null);\n  }\n\n  /**\n   * Get the current `y` position of the graph\n   */\n  get panOffsetY() {\n    return this.transformationMatrix.f;\n  }\n\n  /**\n   * Set the current `y` position of the graph\n   */\n  @Input('panOffsetY')\n  set panOffsetY(y) {\n    this.panTo(null, Number(y));\n  }\n\n  /**\n   * Angular lifecycle event\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  ngOnInit(): void {\n    if (this.update$) {\n      this.subscriptions.push(\n        this.update$.subscribe(() => {\n          this.update();\n        })\n      );\n    }\n\n    if (this.center$) {\n      this.subscriptions.push(\n        this.center$.subscribe(() => {\n          this.center();\n        })\n      );\n    }\n    if (this.zoomToFit$) {\n      this.subscriptions.push(\n        this.zoomToFit$.subscribe(() => {\n          this.zoomToFit();\n        })\n      );\n    }\n\n    if (this.panToNode$) {\n      this.subscriptions.push(\n        this.panToNode$.subscribe((nodeId: string) => {\n          this.panToNodeId(nodeId);\n        })\n      );\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { layout, layoutSettings, nodes, clusters, links } = changes;\n    this.setLayout(this.layout);\n    if (layoutSettings) {\n      this.setLayoutSettings(this.layoutSettings);\n    }\n    this.update();\n  }\n\n  setLayout(layout: string | Layout): void {\n    this.initialized = false;\n    if (!layout) {\n      layout = 'dagre';\n    }\n    if (typeof layout === 'string') {\n      this.layout = this.layoutService.getLayout(layout);\n      this.setLayoutSettings(this.layoutSettings);\n    }\n  }\n\n  setLayoutSettings(settings: any): void {\n    if (this.layout && typeof this.layout !== 'string') {\n      this.layout.settings = settings;\n      this.update();\n    }\n  }\n\n  /**\n   * Angular lifecycle event\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    for (const sub of this.subscriptions) {\n      sub.unsubscribe();\n    }\n    this.subscriptions = null;\n  }\n\n  /**\n   * Angular lifecycle event\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    setTimeout(() => this.update());\n  }\n\n  /**\n   * Base class update implementation for the dag graph\n   *\n   * @memberOf GraphComponent\n   */\n  update(): void {\n    super.update();\n    if (!this.curve) {\n      this.curve = shape.curveBundle.beta(1);\n    }\n\n    this.zone.run(() => {\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showLegend: this.legend\n      });\n\n      this.seriesDomain = this.getSeriesDomain();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n\n      this.createGraph();\n      this.updateTransform();\n      this.initialized = true;\n    });\n  }\n\n  /**\n   * Creates the dagre graph engine\n   *\n   * @memberOf GraphComponent\n   */\n  createGraph(): void {\n    this.graphSubscription.unsubscribe();\n    this.graphSubscription = new Subscription();\n    const initializeNode = (n: Node) => {\n      if (!n.meta) {\n        n.meta = {};\n      }\n      if (!n.id) {\n        n.id = id();\n      }\n      if (!n.dimension) {\n        n.dimension = {\n          width: this.nodeWidth ? this.nodeWidth : 30,\n          height: this.nodeHeight ? this.nodeHeight : 30\n        };\n\n        n.meta.forceDimensions = false;\n      } else {\n        n.meta.forceDimensions = n.meta.forceDimensions === undefined ? true : n.meta.forceDimensions;\n      }\n      n.position = {\n        x: 0,\n        y: 0\n      };\n      n.data = n.data ? n.data : {};\n      return n;\n    };\n\n    this.graph = {\n      nodes: [...this.nodes].map(initializeNode),\n      clusters: [...(this.clusters || [])].map(initializeNode),\n      edges: [...this.links].map(e => {\n        if (!e.id) {\n          e.id = id();\n        }\n        return e;\n      })\n    };\n\n    requestAnimationFrame(() => this.draw());\n  }\n\n  /**\n   * Draws the graph using dagre layouts\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  draw(): void {\n    if (!this.layout || typeof this.layout === 'string') {\n      return;\n    }\n    // Calc view dims for the nodes\n    this.applyNodeDimensions();\n\n    // Recalc the layout\n    const result = this.layout.run(this.graph);\n    const result$ = result instanceof Observable ? result : of(result);\n    this.graphSubscription.add(\n      result$.subscribe(graph => {\n        this.graph = graph;\n        this.tick();\n      })\n    );\n    result$.pipe(first(graph => graph.nodes.length > 0)).subscribe(() => this.applyNodeDimensions());\n  }\n\n  tick() {\n    // Transposes view options to the node\n    const oldNodes: Set<string> = new Set();\n\n    this.graph.nodes.map(n => {\n      n.transform = `translate(${n.position.x - n.dimension.width / 2 || 0}, ${n.position.y - n.dimension.height / 2 ||\n        0})`;\n      if (!n.data) {\n        n.data = {};\n      }\n      n.data.color = this.colors.getColor(this.groupResultsBy(n));\n      oldNodes.add(n.id);\n    });\n\n    // Prevent animations on new nodes\n    setTimeout(() => {\n      this.oldNodes = oldNodes;\n    }, 500);\n\n    (this.graph.clusters || []).map(n => {\n      n.transform = `translate(${n.position.x - n.dimension.width / 2 || 0}, ${n.position.y - n.dimension.height / 2 ||\n        0})`;\n      if (!n.data) {\n        n.data = {};\n      }\n      n.data.color = this.colors.getColor(this.groupResultsBy(n));\n    });\n\n    // Update the labels to the new positions\n    const newLinks = [];\n    for (const edgeLabelId in this.graph.edgeLabels) {\n      const edgeLabel = this.graph.edgeLabels[edgeLabelId];\n\n      const normKey = edgeLabelId.replace(/[^\\w-]*/g, '');\n\n      const isMultigraph = this.layout && typeof this.layout !== 'string' && this.layout.settings && this.layout.settings.multigraph;\n\n      let oldLink = isMultigraph ? this._oldLinks.find(ol => `${ol.source}${ol.target}${ol.id}` === normKey) :\n                                      this._oldLinks.find(ol => `${ol.source}${ol.target}` === normKey);  \n\n      const linkFromGraph = isMultigraph ? this.graph.edges.find(nl => `${nl.source}${nl.target}${nl.id}` === normKey) :\n                                            this.graph.edges.find(nl => `${nl.source}${nl.target}` === normKey);  \n      \n      if (!oldLink) {\n        oldLink = linkFromGraph || edgeLabel;\n      } else if (\n        oldLink.data && \n        linkFromGraph && linkFromGraph.data && \n        JSON.stringify(oldLink.data) !== JSON.stringify(linkFromGraph.data)) { // Compare old link to new link and replace if not equal      \n        oldLink.data = linkFromGraph.data \n      }\n\n      oldLink.oldLine = oldLink.line;\n\n      const points = edgeLabel.points;\n      const line = this.generateLine(points);\n\n      const newLink = Object.assign({}, oldLink);\n      newLink.line = line;\n      newLink.points = points;\n\n      this.updateMidpointOnEdge(newLink, points);\n\n      const textPos = points[Math.floor(points.length / 2)];\n      if (textPos) {\n        newLink.textTransform = `translate(${textPos.x || 0},${textPos.y || 0})`;\n      }\n\n      newLink.textAngle = 0;\n      if (!newLink.oldLine) {\n        newLink.oldLine = newLink.line;\n      }\n\n      this.calcDominantBaseline(newLink);\n      newLinks.push(newLink);\n    }\n\n    this.graph.edges = newLinks;\n\n    // Map the old links for animations\n    if (this.graph.edges) {\n      this._oldLinks = this.graph.edges.map(l => {\n        const newL = Object.assign({}, l);\n        newL.oldLine = l.line;\n        return newL;\n      });\n    }\n\n    // Calculate the height/width total, but only if we have any nodes\n    if(this.graph.nodes && this.graph.nodes.length) {\n      this.graphDims.width = Math.max(...this.graph.nodes.map(n => n.position.x + n.dimension.width));\n      this.graphDims.height = Math.max(...this.graph.nodes.map(n => n.position.y + n.dimension.height));\n    }\n\n    if (this.autoZoom) {\n      this.zoomToFit();\n    }\n\n    if (this.autoCenter) {\n      // Auto-center when rendering\n      this.center();\n    }\n\n    requestAnimationFrame(() => this.redrawLines());\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Measures the node element and applies the dimensions\n   *\n   * @memberOf GraphComponent\n   */\n  applyNodeDimensions(): void {\n    if (this.nodeElements && this.nodeElements.length) {\n      this.nodeElements.map(elem => {\n        const nativeElement = elem.nativeElement;\n        const node = this.graph.nodes.find(n => n.id === nativeElement.id);\n\n        // calculate the height\n        let dims;\n        try {\n          dims = nativeElement.getBBox();\n        } catch (ex) {\n          // Skip drawing if element is not displayed - Firefox would throw an error here\n          return;\n        }\n        if (this.nodeHeight) {          \n          node.dimension.height = node.dimension.height && node.meta.forceDimensions ? node.dimension.height : this.nodeHeight;\n        } else {\n          node.dimension.height = node.dimension.height && node.meta.forceDimensions ? node.dimension.height : dims.height;\n        }\n\n        if (this.nodeMaxHeight) {\n          node.dimension.height = Math.max(node.dimension.height, this.nodeMaxHeight);\n        }\n        if (this.nodeMinHeight) {\n          node.dimension.height = Math.min(node.dimension.height, this.nodeMinHeight);\n        }\n\n        if (this.nodeWidth) {\n          node.dimension.width =  node.dimension.width && node.meta.forceDimensions ? node.dimension.width : this.nodeWidth;\n        } else {\n          // calculate the width\n          if (nativeElement.getElementsByTagName('text').length) {\n            let maxTextDims;\n            try {\n              for (const textElem of nativeElement.getElementsByTagName('text')) {\n                const currentBBox = textElem.getBBox();\n                if (!maxTextDims) {\n                  maxTextDims = currentBBox;\n                } else {\n                  if (currentBBox.width > maxTextDims.width) {\n                    maxTextDims.width = currentBBox.width;\n                  }\n                  if (currentBBox.height > maxTextDims.height) {\n                    maxTextDims.height = currentBBox.height;\n                  }\n                }\n              }\n            } catch (ex) {\n              // Skip drawing if element is not displayed - Firefox would throw an error here\n              return;\n            }\n            node.dimension.width = node.dimension.width && node.meta.forceDimensions ? node.dimension.width : maxTextDims.width + 20;\n          } else {\n            node.dimension.width = node.dimension.width && node.meta.forceDimensions ? node.dimension.width : dims.width;\n          }\n        }\n\n        if (this.nodeMaxWidth) {\n          node.dimension.width = Math.max(node.dimension.width, this.nodeMaxWidth);\n        }\n        if (this.nodeMinWidth) {\n          node.dimension.width = Math.min(node.dimension.width, this.nodeMinWidth);\n        }\n      });\n    }\n  }\n\n  /**\n   * Redraws the lines when dragged or viewport updated\n   *\n   * @memberOf GraphComponent\n   */\n  redrawLines(_animate = this.animate): void {\n    this.linkElements.map(linkEl => {\n      const edge = this.graph.edges.find(lin => lin.id === linkEl.nativeElement.id);\n\n      if (edge) {\n        const linkSelection = select(linkEl.nativeElement).select('.line');\n        linkSelection\n          .attr('d', edge.oldLine)\n          .transition()\n          .ease(ease.easeSinInOut)\n          .duration(_animate ? 500 : 0)\n          .attr('d', edge.line);\n\n        const textPathSelection = select(this.chartElement.nativeElement).select(`#${edge.id}`);\n        textPathSelection\n          .attr('d', edge.oldTextPath)\n          .transition()\n          .ease(ease.easeSinInOut)\n          .duration(_animate ? 500 : 0)\n          .attr('d', edge.textPath);\n\n        this.updateMidpointOnEdge(edge, edge.points);\n      }\n    });\n  }\n\n  /**\n   * Calculate the text directions / flipping\n   *\n   * @memberOf GraphComponent\n   */\n  calcDominantBaseline(link): void {\n    const firstPoint = link.points[0];\n    const lastPoint = link.points[link.points.length - 1];\n    link.oldTextPath = link.textPath;\n\n    if (lastPoint.x < firstPoint.x) {\n      link.dominantBaseline = 'text-before-edge';\n\n      // reverse text path for when its flipped upside down\n      link.textPath = this.generateLine([...link.points].reverse());\n    } else {\n      link.dominantBaseline = 'text-after-edge';\n      link.textPath = link.line;\n    }\n  }\n\n  /**\n   * Generate the new line path\n   *\n   * @memberOf GraphComponent\n   */\n  generateLine(points: any): any {\n    const lineFunction = shape\n      .line<any>()\n      .x(d => d.x)\n      .y(d => d.y)\n      .curve(this.curve);\n    return lineFunction(points);\n  }\n\n  /**\n   * Zoom was invoked from event\n   *\n   * @memberOf GraphComponent\n   */\n  onZoom($event: MouseEvent, direction): void {\n    const zoomFactor = 1 + (direction === 'in' ? this.zoomSpeed : -this.zoomSpeed);\n\n    // Check that zooming wouldn't put us out of bounds\n    const newZoomLevel = this.zoomLevel * zoomFactor;\n    if (newZoomLevel <= this.minZoomLevel || newZoomLevel >= this.maxZoomLevel) {\n      return;\n    }\n\n    // Check if zooming is enabled or not\n    if (!this.enableZoom) {\n      return;\n    }\n\n    if (this.panOnZoom === true && $event) {\n      // Absolute mouse X/Y on the screen\n      const mouseX = $event.clientX;\n      const mouseY = $event.clientY;\n\n      // Transform the mouse X/Y into a SVG X/Y\n      const svg = this.chart.nativeElement.querySelector('svg');\n      const svgGroup = svg.querySelector('g.chart');\n\n      const point = svg.createSVGPoint();\n      point.x = mouseX;\n      point.y = mouseY;\n      const svgPoint = point.matrixTransform(svgGroup.getScreenCTM().inverse());\n\n      // Panzoom\n      this.pan(svgPoint.x, svgPoint.y, true);\n      this.zoom(zoomFactor);\n      this.pan(-svgPoint.x, -svgPoint.y, true);\n    } else {\n      this.zoom(zoomFactor);\n    }\n  }\n\n  /**\n   * Pan by x/y\n   *\n   * @param x\n   * @param y\n   */\n  pan(x: number, y: number, ignoreZoomLevel: boolean = false): void {\n    const zoomLevel = ignoreZoomLevel ? 1 : this.zoomLevel;\n    this.transformationMatrix = transform(this.transformationMatrix, translate(x / zoomLevel, y / zoomLevel));\n\n    this.updateTransform();\n  }\n\n  /**\n   * Pan to a fixed x/y\n   *\n   */\n  panTo(x: number, y: number): void {\n    if (x === null || x === undefined || isNaN(x) || y === null || y === undefined || isNaN(y)) {\n      return;\n    }\n\n    const panX = -this.panOffsetX - x * this.zoomLevel + this.dims.width / 2;\n    const panY = -this.panOffsetY - y * this.zoomLevel + this.dims.height / 2;\n\n    this.transformationMatrix = transform(\n      this.transformationMatrix,\n      translate(panX / this.zoomLevel, panY / this.zoomLevel)\n    );\n\n    this.updateTransform();\n  }\n\n  /**\n   * Zoom by a factor\n   *\n   */\n  zoom(factor: number): void {\n    this.transformationMatrix = transform(this.transformationMatrix, scale(factor, factor));\n    this.zoomChange.emit(this.zoomLevel);\n    this.updateTransform();\n  }\n\n  /**\n   * Zoom to a fixed level\n   *\n   */\n  zoomTo(level: number): void {\n    this.transformationMatrix.a = isNaN(level) ? this.transformationMatrix.a : Number(level);\n    this.transformationMatrix.d = isNaN(level) ? this.transformationMatrix.d : Number(level);\n    this.zoomChange.emit(this.zoomLevel);\n    this.updateTransform();\n    this.update();\n  }\n\n  /**\n   * Pan was invoked from event\n   *\n   * @memberOf GraphComponent\n   */\n  onPan(event: MouseEvent): void {\n    this.pan(event.movementX, event.movementY);\n  }\n\n  /**\n   * Drag was invoked from an event\n   *\n   * @memberOf GraphComponent\n   */\n  onDrag(event: MouseEvent): void {\n    if (!this.draggingEnabled) {\n      return;\n    }\n    const node = this.draggingNode;\n    if (this.layout && typeof this.layout !== 'string' && this.layout.onDrag) {\n      this.layout.onDrag(node, event);\n    }\n\n    node.position.x += event.movementX / this.zoomLevel;\n    node.position.y += event.movementY / this.zoomLevel;\n\n    // move the node\n    const x = node.position.x - node.dimension.width / 2;\n    const y = node.position.y - node.dimension.height / 2;\n    node.transform = `translate(${x}, ${y})`;\n\n    for (const link of this.graph.edges) {\n      if (\n        link.target === node.id ||\n        link.source === node.id ||\n        (link.target as any).id === node.id ||\n        (link.source as any).id === node.id\n      ) {\n        if (this.layout && typeof this.layout !== 'string') {\n          const result = this.layout.updateEdge(this.graph, link);\n          const result$ = result instanceof Observable ? result : of(result);\n          this.graphSubscription.add(\n            result$.subscribe(graph => {\n              this.graph = graph;\n              this.redrawEdge(link);\n            })\n          );\n        }\n      }\n    }\n\n    this.redrawLines(false);\n  }\n\n  redrawEdge(edge: Edge) {\n    const line = this.generateLine(edge.points);\n    this.calcDominantBaseline(edge);\n    edge.oldLine = edge.line;\n    edge.line = line;\n  }\n\n  /**\n   * Update the entire view for the new pan position\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  updateTransform(): void {\n    this.transform = toSVG(smoothMatrix(this.transformationMatrix, 100));\n  }\n\n  /**\n   * Node was clicked\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  onClick(event: any): void {\n    this.select.emit(event);\n  }\n\n  /**\n   * Node was focused\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  onActivate(event): void {\n    if (this.activeEntries.indexOf(event) > -1) {\n      return;\n    }\n    this.activeEntries = [event, ...this.activeEntries];\n    this.activate.emit({ value: event, entries: this.activeEntries });\n  }\n\n  /**\n   * Node was defocused\n   *\n   * @memberOf GraphComponent\n   */\n  onDeactivate(event): void {\n    const idx = this.activeEntries.indexOf(event);\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: event, entries: this.activeEntries });\n  }\n\n  /**\n   * Get the domain series for the nodes\n   *\n   * @memberOf GraphComponent\n   */\n  getSeriesDomain(): any[] {\n    return this.nodes\n      .map(d => this.groupResultsBy(d))\n      .reduce((nodes: string[], node): any[] => (nodes.indexOf(node) !== -1 ? nodes : nodes.concat([node])), [])\n      .sort();\n  }\n\n  /**\n   * Tracking for the link\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  trackLinkBy(index: number, link: Edge): any {\n    return link.id;\n  }\n\n  /**\n   * Tracking for the node\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  trackNodeBy(index: number, node: Node): any {\n    return node.id;\n  }\n\n  /**\n   * Sets the colors the nodes\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\n  }\n\n  /**\n   * Gets the legend options\n   *\n   * @memberOf GraphComponent\n   */\n  getLegendOptions(): any {\n    return {\n      scaleType: 'ordinal',\n      domain: this.seriesDomain,\n      colors: this.colors\n    };\n  }\n\n  /**\n   * On mouse move event, used for panning and dragging.\n   *\n   * @memberOf GraphComponent\n   */\n  @HostListener('document:mousemove', ['$event'])\n  onMouseMove($event: MouseEvent): void {\n    this.isMouseMoveCalled = true;\n    if (this.isPanning && this.panningEnabled) {\n      this.checkEnum(this.panningAxis, $event);\n    } else if (this.isDragging && this.draggingEnabled) {\n      this.onDrag($event);\n    }\n  }\n\n  @HostListener('document:mousedown', ['$event'])\n  onMouseDown(event: MouseEvent): void {\n     this.isMouseMoveCalled = false;\n  }\n\n  @HostListener('document:click', ['$event'])\n  graphClick(event: MouseEvent): void {\n    if (!this.isMouseMoveCalled)\n      this.clickHandler.emit(event);\n  }\n\n  /**\n   * On touch start event to enable panning.\n   *\n   * @memberOf GraphComponent\n   */\n  onTouchStart(event: any): void {\n    this._touchLastX = event.changedTouches[0].clientX;\n    this._touchLastY = event.changedTouches[0].clientY;\n\n    this.isPanning = true;\n  }\n\n  /**\n   * On touch move event, used for panning.\n   *\n   */\n  @HostListener('document:touchmove', ['$event'])\n  onTouchMove($event: any): void {\n    if (this.isPanning && this.panningEnabled) {\n      const clientX = $event.changedTouches[0].clientX;\n      const clientY = $event.changedTouches[0].clientY;\n      const movementX = clientX - this._touchLastX;\n      const movementY = clientY - this._touchLastY;\n      this._touchLastX = clientX;\n      this._touchLastY = clientY;\n\n      this.pan(movementX, movementY);\n    }\n  }\n\n  /**\n   * On touch end event to disable panning.\n   *\n   * @memberOf GraphComponent\n   */\n  onTouchEnd(event: any) {\n    this.isPanning = false;\n  }\n\n  /**\n   * On mouse up event to disable panning/dragging.\n   *\n   * @memberOf GraphComponent\n   */\n  @HostListener('document:mouseup', ['$event'])\n  onMouseUp(event: MouseEvent): void {\n    this.isDragging = false;\n    this.isPanning = false;\n    if (this.layout && typeof this.layout !== 'string' && this.layout.onDragEnd) {\n      this.layout.onDragEnd(this.draggingNode, event);\n    }\n  }\n\n  /**\n   * On node mouse down to kick off dragging\n   *\n   * @memberOf GraphComponent\n   */\n  onNodeMouseDown(event: MouseEvent, node: any): void {\n    if (!this.draggingEnabled) {\n      return;\n    }\n    this.isDragging = true;\n    this.draggingNode = node;\n\n    if (this.layout && typeof this.layout !== 'string' && this.layout.onDragStart) {\n      this.layout.onDragStart(node, event);\n    }\n  }\n\n  /**\n   * Center the graph in the viewport\n   */\n  center(): void {\n    this.panTo(this.graphDims.width / 2, this.graphDims.height / 2);\n  }\n\n  /**\n   * Zooms to fit the entier graph\n   */\n  zoomToFit(): void {\n    const heightZoom = this.dims.height / this.graphDims.height;\n    const widthZoom = this.dims.width / this.graphDims.width;\n    const zoomLevel = Math.min(heightZoom, widthZoom, 1);\n\n    if (zoomLevel <= this.minZoomLevel || zoomLevel >= this.maxZoomLevel) {\n      return;\n    }\n    \n    if (zoomLevel !== this.zoomLevel) {\n      this.zoomLevel = zoomLevel;\n      this.updateTransform();\n      this.zoomChange.emit(this.zoomLevel);\n    }\n  }\n\n  /**\n   * Pans to the node\n   * @param nodeId \n   */\n  panToNodeId(nodeId: string): void {\n    const node = this.nodes.find(n => n.id === nodeId);\n    if (!node) {\n      return;\n    }\n\n    this.panTo(node.position.x, node.position.y);\n  }\n\n  private checkEnum(key: string, event: MouseEvent) {\n    switch (key) {\n      case PanningAxis.Horizontal:\n        this.pan(event.movementX, 0);\n        break;\n      case PanningAxis.Vertical:\n        this.pan(0, event.movementY);\n        break;\n      default:\n        this.onPan(event);\n        break;\n    }\n  }\n\n  private updateMidpointOnEdge(edge: Edge, points: any): void {\n    if (!edge || !points) {\n      return;\n    }\n    \n    if (points.length % 2 === 1) {\n      edge.midPoint = points[Math.floor(points.length / 2)];\n    } else {\n      const first = points[points.length / 2];\n      const second = points[points.length / 2 - 1];\n      edge.midPoint = {\n        x: (first.x + second.x) / 2,\n        y: (first.y + second.y) / 2\n      };\n    }\n  }\n}\n","import { Directive, Output, HostListener, EventEmitter } from '@angular/core';\n\n/**\n * Mousewheel directive\n * https://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n *\n * @export\n */\n@Directive({ selector: '[mouseWheel]' })\nexport class MouseWheelDirective {\n  @Output()\n  mouseWheelUp = new EventEmitter();\n  @Output()\n  mouseWheelDown = new EventEmitter();\n\n  @HostListener('mousewheel', ['$event'])\n  onMouseWheelChrome(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('DOMMouseScroll', ['$event'])\n  onMouseWheelFirefox(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('onmousewheel', ['$event'])\n  onMouseWheelIE(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  mouseWheelFunc(event: any): void {\n    if (window.event) {\n      event = window.event;\n    }\n\n    const delta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n    if (delta > 0) {\n      this.mouseWheelUp.emit(event);\n    } else if (delta < 0) {\n      this.mouseWheelDown.emit(event);\n    }\n\n    // for IE\n    event.returnValue = false;\n\n    // for Chrome and Firefox\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { GraphComponent } from './graph.component';\nimport { ChartCommonModule } from '@swimlane/ngx-charts';\nimport { MouseWheelDirective } from './mouse-wheel.directive';\nimport { LayoutService } from './layouts/layout.service';\nexport { GraphComponent };\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [GraphComponent, MouseWheelDirective],\n  exports: [GraphComponent, MouseWheelDirective],\n  providers: [LayoutService]\n})\nexport class GraphModule {}\n","import { NgModule } from '@angular/core';\nimport { GraphModule } from './graph/graph.module';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nexport * from './models/index';\nexport * from './graph/graph.component';\n\n@NgModule({\n  imports: [NgxChartsModule],\n  exports: [GraphModule]\n})\nexport class NgxGraphModule {}\n"],"names":["dagre.layout","dagre.graphlib","tslib_1.__values","Orientation","forceSimulation","forceManyBody","forceCollide","forceLink","Subject","d3adaptor","Injectable","tslib_1.__extends","EventEmitter","Subscription","identity","shape.curveBundle","calculateViewDimensions","tslib_1.__spread","Observable","of","first","select","ease.easeSinInOut","shape\n            .line","transform","translate","scale","toSVG","smoothMatrix","ColorHelper","Component","ViewEncapsulation","ChangeDetectionStrategy","ElementRef","NgZone","ChangeDetectorRef","Input","Output","ContentChild","ViewChild","ChartComponent","ViewChildren","HostListener","BaseChartComponent","Directive","NgModule","ChartCommonModule","NgxChartsModule"],"mappings":"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"}